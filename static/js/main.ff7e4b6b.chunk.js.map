{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["getFormattedTime","date","toUTCString","slice","Clock","state","currentTime","Date","timerId","timeUpdate","updatedTime","setState","window","console","info","this","setInterval","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","nameChange","clickRight","event","preventDefault","clickLeft","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,EAAiBC,GACxB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,EACvC,C,IAEKC,E,4MACJC,MAAyB,CACvBC,YAAaN,EAAiB,IAAIO,O,EAGpCC,QAAU,E,EAkBVC,WAAa,WACX,IAAMC,EAAcV,EAAiB,IAAIO,MAEzC,EAAKI,SAAS,CACZL,YAAaI,IAGfE,OAAOC,QAAQC,KAAKJ,EACrB,E,uDAxBD,WACEK,KAAKP,QAAUI,OAAOI,YAAYD,KAAKN,WAAY,IACpD,G,gCAED,SAAmBQ,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAChCN,OAAOC,QAAQO,MAAf,uBACkBH,EAAUC,KAD5B,eACuCH,KAAKI,MAAMD,MAGrD,G,kCAED,WACEN,OAAOS,cAAcN,KAAKP,QAC3B,G,oBAYD,WACE,IAAQF,EAAgBS,KAAKV,MAArBC,YACAY,EAASH,KAAKI,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,MAIR,K,GAlDiBiB,IAAMC,WAqDXpB,IC9Df,SAASqB,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWzB,OAAO,GAE3C,MAAM,SAAN,OAAgBuB,EACjB,CAOM,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVC,UAAW,WAHf,EAMEvB,QAAU,EANZ,EAoBEwB,WAAa,WACX,EAAKrB,SAAS,CACZoB,UAAWN,KAEd,EAxBH,EA0BEQ,WAAa,SAACC,GACZA,EAAMC,iBAEN,EAAKxB,SAAS,CACZmB,UAAU,GAEb,EAhCH,EAkCEM,UAAY,WACV,EAAKzB,SAAS,CACZmB,UAAU,GAEb,EAtCH,uDAQE,WACEf,KAAKP,QAAUI,OAAOI,YAAYD,KAAKiB,WAAY,MACnDK,SAASC,iBAAiB,cAAevB,KAAKkB,YAC9CI,SAASC,iBAAiB,QAASvB,KAAKqB,UACzC,GAZH,kCAcE,WACExB,OAAOS,cAAcN,KAAKP,SAC1B6B,SAASE,oBAAoB,cAAexB,KAAKkB,YACjDI,SAASE,oBAAoB,QAASxB,KAAKqB,UAC5C,GAlBH,oBAwCE,WACE,MAAgCrB,KAAKV,MAA7ByB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOZ,KAAMa,MAIpB,KApDH,GAAyBR,IAAMC,WCb/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,Q","file":"static/js/main.ff7e4b6b.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  currentTime: string;\n};\n\ntype Props = {\n  name: string;\n};\n\nfunction getFormattedTime(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\nclass Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: getFormattedTime(new Date()),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(this.timeUpdate, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.name !== this.props.name) {\n      window.console.debug(\n        `Renamed from ${prevProps.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  timeUpdate = () => {\n    const updatedTime = getFormattedTime(new Date());\n\n    this.setState({\n      currentTime: updatedTime,\n    });\n\n    window.console.info(updatedTime);\n  };\n\n  render() {\n    const { currentTime } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\n\nimport Clock from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(this.nameChange, 3300);\n    document.addEventListener('contextmenu', this.clickRight);\n    document.addEventListener('click', this.clickLeft);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.clickRight);\n    document.removeEventListener('click', this.clickLeft);\n  }\n\n  nameChange = () => {\n    this.setState({\n      clockName: getRandomName(),\n    });\n  };\n\n  clickRight = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  clickLeft = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}